name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/**
      - hotfix/**
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

  versioning:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.0.8
          branches: main, develop
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git

      - name: Update Microservices
        if: github.ref == 'refs/heads/main'
        run: |
          # Assuming microservices are in the same repository for simplicity
          # Update package.json in microservices to the new React app version
          VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          sed -i '' "s/\"react-app\": \".*\"/\"react-app\": \"$VERSION\"/" path/to/microservice1/package.json
          sed -i '' "s/\"react-app\": \".*\"/\"react-app\": \"$VERSION\"/" path/to/microservice2/package.json
          # Commit and push changes
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -am "chore: update react-app version to $VERSION"
          git push origin main

  prevent-direct-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Prevent direct push
        run: |
          if [[ "${{ github.event.head_commit }}" == "" ]]; then
            echo "Direct push to main or develop is not allowed. Please use a pull request."
            exit 1
          fi
